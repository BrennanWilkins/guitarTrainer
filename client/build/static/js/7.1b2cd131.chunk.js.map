{"version":3,"sources":["containers/NoteTrainer/NoteTrainer.module.css","containers/NoteTrainer/NoteTrainer.js"],"names":["module","exports","connect","state","pracMode","stats","pracModeNote","notesCorrect","notesWrong","totNoteCorrect","totNoteCorrectToday","noteGoal","goals","isAuth","auth","dispatch","onCorrectNote","note","actions","onWrongNote","setPracMode","bool","props","useState","sessionCorrect","setSessionCorrect","animCorrect","setAnimCorrect","sessionWrong","setSessionWrong","animWrong","setAnimWrong","gameFirstStart","setGameFirstStart","startGame","setStartGame","showSettings","setShowSettings","disabledNotes","setDisabledNotes","settingsErrMsg","setSettingsErrMsg","showSettingsErr","setShowSettingsErr","setNote","shortNote","setShortNote","noteSound","setNoteSound","prevShortNote","setPrevShortNote","volumeOn","setVolumeOn","noCorrAnim","setNoCorrAnim","showGoalPanel","setShowGoalPanel","showGoalReached","setShowGoalReached","settingsBackdrop","useRef","useEffect","gameLoop","randNote","getRandNotePracMode","getRandNote","getNoteShorthand","newNoteSound","Audio","play","className","classes","Content","NoScroll","join","show","mode","close","Title","TopBar","pause","repeat","currentTime","started","clicked","prevState","InnerTitle","correct","wrong","otherNotes","noAnim","disabledBtns","checkAnswer","e","target","value","prevCorrect","setTimeout","prevWrong","ref","always","current","includes","showErr","errMsg","setMode","toggle","val","prevNotes","filter","n","length","concat"],"mappings":"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","file":"static/js/7.1b2cd131.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"NoteTrainer_Content__3E3lu\",\"NoScroll\":\"NoteTrainer_NoScroll__fAXDR\",\"Title\":\"NoteTrainer_Title__u15qF\",\"TopBar\":\"NoteTrainer_TopBar__3qJ8a\",\"InnerTitle\":\"NoteTrainer_InnerTitle__Ts4jj\"};","import React, { useState, useRef, useEffect } from 'react';\r\nimport classes from './NoteTrainer.module.css';\r\nimport Guitar from '../../components/Guitar/Guitar';\r\nimport { getRandNote, getNoteShorthand, getRandNotePracMode } from '../../utils/intervalFuncs';\r\nimport TopBtns from '../../components/TrainerTopBtns/TrainerTopBtns';\r\nimport SessionStats from '../../components/SessionStats/SessionStats';\r\nimport StartPanel from '../../components/StartPanel/StartPanel';\r\nimport SettingsPanel from '../../components/SettingsPanel/SettingsPanel';\r\nimport NoteContainer from '../../components/NoteContainer/NoteContainer';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions/index';\r\nimport GoalPanel from '../../components/GoalPanel/GoalPanel';\r\nimport GoalReachedPanel from '../../components/GoalReachedPanel/GoalReachedPanel';\r\n\r\nconst NoteTrainer = props => {\r\n  const [sessionCorrect, setSessionCorrect] = useState(0);\r\n  const [animCorrect, setAnimCorrect] = useState(false);\r\n  const [sessionWrong, setSessionWrong] = useState(0);\r\n  const [animWrong, setAnimWrong] = useState(false);\r\n  const [gameFirstStart, setGameFirstStart] = useState(false);\r\n  const [startGame, setStartGame] = useState(false);\r\n  const [showSettings, setShowSettings] = useState(false);\r\n  const [disabledNotes, setDisabledNotes] = useState([]);\r\n  const [settingsErrMsg, setSettingsErrMsg] = useState('');\r\n  const [showSettingsErr, setShowSettingsErr] = useState(false);\r\n  const [note, setNote] = useState();\r\n  const [shortNote, setShortNote] = useState();\r\n  const [noteSound, setNoteSound] = useState();\r\n  const [prevShortNote, setPrevShortNote] = useState();\r\n  const [volumeOn, setVolumeOn] = useState(true);\r\n  const [noCorrAnim, setNoCorrAnim] = useState(false);\r\n  const [showGoalPanel, setShowGoalPanel] = useState(false);\r\n  const [showGoalReached, setShowGoalReached] = useState(false);\r\n\r\n  const settingsBackdrop = useRef();\r\n\r\n  useEffect(() => {\r\n    setSessionWrong(0);\r\n    setSessionCorrect(0);\r\n  }, [props.isAuth]);\r\n\r\n  useEffect(() => {\r\n    return () => props.setPracMode(false);\r\n  }, []);\r\n\r\n  const startGameHandler = () => {\r\n    if (!gameFirstStart) {\r\n      setGameFirstStart(true);\r\n      gameLoop();\r\n      setTimeout(() => setShowGoalPanel(true), 2000);\r\n    }\r\n    setStartGame(true);\r\n  };\r\n\r\n  const gameLoop = () => {\r\n    const randNote = (\r\n      props.pracMode ?\r\n      getRandNotePracMode(disabledNotes, props.notesCorrect, props.notesWrong) :\r\n      getRandNote(disabledNotes)\r\n    );\r\n    setNote(randNote);\r\n    setShortNote(getNoteShorthand(randNote));\r\n    setPrevShortNote(getNoteShorthand(randNote));\r\n    const newNoteSound = new Audio(`/assets/notes/${randNote}.mp3`);\r\n    setNoteSound(newNoteSound);\r\n    if (volumeOn) { newNoteSound.play(); }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.totNoteCorrect < props.noteGoal) {\r\n      setShowGoalReached(false);\r\n    }\r\n  }, [props.noteGoal]);\r\n\r\n  const checkAnswer = (e) => {\r\n    if (e.target.value === shortNote) {\r\n      if (props.noteGoal > 0 && props.totNoteCorrect + 1 === props.noteGoal) {\r\n        setShowGoalReached(true);\r\n      }\r\n      props.onCorrectNote(shortNote);\r\n      setSessionCorrect(prevCorrect => prevCorrect + 1);\r\n      setAnimCorrect(true);\r\n      setTimeout(() => {\r\n        setAnimCorrect(false);\r\n        setNoCorrAnim(false);\r\n        gameLoop();\r\n      }, 300);\r\n    } else {\r\n      props.onWrongNote(shortNote);\r\n      setAnimWrong(true);\r\n      setTimeout(() => {\r\n        setAnimWrong(false);\r\n      }, 300);\r\n      setSessionWrong(prevWrong => prevWrong + 1);\r\n    }\r\n  };\r\n\r\n  const repeatNote = () => {\r\n    if (!volumeOn) { return; }\r\n    noteSound.currentTime = 0;\r\n    noteSound.play();\r\n  };\r\n\r\n  const toggleNote = (e) => {\r\n    const val = e.target.value;\r\n    if (disabledNotes.includes(val)) {\r\n      setDisabledNotes(prevNotes => prevNotes.filter(n => n !== val));\r\n      if (disabledNotes.length < 12) {\r\n        setShowSettingsErr(false);\r\n        setSettingsErrMsg('');\r\n      }\r\n    } else {\r\n      setDisabledNotes(prevNotes => prevNotes.concat([val]));\r\n      if (disabledNotes.length > 9) {\r\n        setShowSettingsErr(true);\r\n        setSettingsErrMsg('You need to have at least two notes enabled.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const closeSettingsHandler = (always, e) => {\r\n    // always closes if close btn clicked\r\n    if ((showSettingsErr || e.target !== settingsBackdrop.current) && !always) { return; }\r\n    setShowSettings(false);\r\n    if (disabledNotes.includes(shortNote) || shortNote !== prevShortNote) {\r\n      setNoCorrAnim(true);\r\n      setPrevShortNote(shortNote);\r\n      gameLoop();\r\n    }\r\n  };\r\n\r\n  const toggleAudio = () => {\r\n    noteSound.pause();\r\n    setVolumeOn(prevState => !prevState);\r\n  };\r\n\r\n  return (\r\n    <div className={!startGame || showSettings ? [classes.Content, classes.NoScroll].join(' ') : classes.Content}>\r\n      <GoalPanel show={showGoalPanel} />\r\n      <GoalReachedPanel\r\n        show={showGoalReached}\r\n        mode=\"Note\"\r\n        close={() => setShowGoalReached(false)} />\r\n      <h1 className={classes.Title}>Note Trainer</h1>\r\n      <div className={classes.TopBar}>\r\n        <TopBtns\r\n          showSettings={() => { setShowSettings(true); setShowGoalReached(false); }}\r\n          pause={() => { setStartGame(false); setShowGoalReached(false); }}\r\n          repeat={repeatNote}\r\n          started={startGame}\r\n          mode=\"Note\"\r\n          volumeOn={volumeOn}\r\n          clicked={toggleAudio} />\r\n        <h1 className={classes.InnerTitle}>Note Trainer</h1>\r\n        <SessionStats\r\n          animCorrect={animCorrect}\r\n          animWrong={animWrong}\r\n          correct={sessionCorrect}\r\n          wrong={sessionWrong} />\r\n      </div>\r\n      <Guitar\r\n        otherNotes={[note]}\r\n        noAnim={noCorrAnim} />\r\n      <NoteContainer\r\n        disabledBtns={disabledNotes}\r\n        checkAnswer={checkAnswer}\r\n        mode=\"Note\" />\r\n      <StartPanel\r\n        mode=\"Note\"\r\n        started={startGameHandler}\r\n        startGame={startGame} />\r\n      <SettingsPanel\r\n        mode=\"Note\"\r\n        showSettings={showSettings}\r\n        disabledBtns={disabledNotes}\r\n        ref={settingsBackdrop}\r\n        close={closeSettingsHandler}\r\n        showErr={showSettingsErr}\r\n        errMsg={settingsErrMsg}\r\n        pracMode={props.pracMode}\r\n        setMode={() => props.setPracMode(!props.pracMode)}\r\n        toggle={toggleNote} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  pracMode: state.stats.pracModeNote,\r\n  notesCorrect: state.stats.notesCorrect,\r\n  notesWrong: state.stats.notesWrong,\r\n  totNoteCorrect: state.stats.totNoteCorrectToday,\r\n  noteGoal: state.goals.noteGoal,\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onCorrectNote: (note) => dispatch(actions.incCorrectNote(note)),\r\n  onWrongNote: (note) => dispatch(actions.incWrongNote(note)),\r\n  setPracMode: (bool) => dispatch(actions.setPracModeNote(bool)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteTrainer);\r\n"],"sourceRoot":""}