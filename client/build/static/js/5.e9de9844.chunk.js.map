{"version":3,"sources":["containers/ChordTrainer/ChordTrainer.module.css","containers/ChordTrainer/ChordTrainer.js"],"names":["module","exports","connect","state","totCorrect","stats","totChordCorrectToday","chordGoal","goals","isAuth","auth","dispatch","incCorrect","incCorrectChord","incWrong","incWrongChord","props","useState","sessionCorrect","setSessionCorrect","animCorrect","setAnimCorrect","sessionWrong","setSessionWrong","animWrong","setAnimWrong","gameFirstStart","setGameFirstStart","startGame","setStartGame","rootNote","setRootNote","thirdNote","setThirdNote","fifthNote","setFifthNote","chord","setChord","rootSound","setRootSound","thirdSound","setThirdSound","fifthSound","setFifthSound","showSettings","setShowSettings","disabledRoots","setDisabledRoots","settingsErrMsg","setSettingsErrMsg","showSettingsErr","setShowSettingsErr","chordType","setChordType","prevChordType","setPrevChordType","volumeOn","setVolumeOn","selectedChord","setSelectedChord","noCorrAnim","setNoCorrAnim","showGoalPanel","setShowGoalPanel","showGoalReached","setShowGoalReached","settingsBackdrop","useRef","useEffect","totChordCorrect","gameLoop","getMajMinChord","root","third","fifth","newChord","newRootSound","Audio","newThirdSound","newFifthSound","autoplay","play","className","classes","Content","NoScroll","join","show","mode","close","Title","TopBar","pause","repeat","currentTime","started","clicked","muted","prev","InnerTitle","correct","wrong","otherNotes","noAnim","disabledBtns","checkAnswer","e","target","value","getNoteShorthand","prevCorrect","setTimeout","prevWrong","setSelected","int","ref","always","current","includes","toggle","val","prevRoots","filter","length","concat","showErr","errMsg","setType","type","intType"],"mappings":"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","file":"static/js/5.e9de9844.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"ChordTrainer_Content__3mR-7\",\"NoScroll\":\"ChordTrainer_NoScroll__2-JGr\",\"Title\":\"ChordTrainer_Title__2W49z\",\"TopBar\":\"ChordTrainer_TopBar__1tt-4\",\"InnerTitle\":\"ChordTrainer_InnerTitle__3hfzW\"};","import React, { useState, useRef, useEffect } from 'react';\r\nimport classes from './ChordTrainer.module.css';\r\nimport Guitar from '../../components/Guitar/Guitar';\r\nimport { getMajMinChord, getNoteShorthand } from '../../utils/intervalFuncs';\r\nimport TopBtns from '../../components/TrainerTopBtns/TrainerTopBtns';\r\nimport SessionStats from '../../components/SessionStats/SessionStats';\r\nimport StartPanel from '../../components/StartPanel/StartPanel';\r\nimport SettingsPanel from '../../components/SettingsPanel/SettingsPanel';\r\nimport NoteContainer from '../../components/NoteContainer/NoteContainer';\r\nimport { connect } from 'react-redux';\r\nimport { incCorrectChord, incWrongChord } from '../../store/actions/index';\r\nimport GoalPanel from '../../components/GoalPanel/GoalPanel';\r\nimport GoalReachedPanel from '../../components/GoalReachedPanel/GoalReachedPanel';\r\n\r\nconst ChordTrainer = props => {\r\n  const [sessionCorrect, setSessionCorrect] = useState(0);\r\n  const [animCorrect, setAnimCorrect] = useState(false);\r\n  const [sessionWrong, setSessionWrong] = useState(0);\r\n  const [animWrong, setAnimWrong] = useState(false);\r\n  const [gameFirstStart, setGameFirstStart] = useState(false);\r\n  const [startGame, setStartGame] = useState(false);\r\n  const [rootNote, setRootNote] = useState('');\r\n  const [thirdNote, setThirdNote] = useState('');\r\n  const [fifthNote, setFifthNote] = useState('');\r\n  const [chord, setChord] = useState('');\r\n  const [rootSound, setRootSound] = useState();\r\n  const [thirdSound, setThirdSound] = useState();\r\n  const [fifthSound, setFifthSound] = useState();\r\n  const [showSettings, setShowSettings] = useState(false);\r\n  const [disabledRoots, setDisabledRoots] = useState([]);\r\n  const [settingsErrMsg, setSettingsErrMsg] = useState('');\r\n  const [showSettingsErr, setShowSettingsErr] = useState(false);\r\n  const [chordType, setChordType] = useState('Both');\r\n  const [prevChordType, setPrevChordType] = useState('Both');\r\n  const [volumeOn, setVolumeOn] = useState(true);\r\n  const [selectedChord, setSelectedChord] = useState('3');\r\n  const [noCorrAnim, setNoCorrAnim] = useState(false);\r\n  const [showGoalPanel, setShowGoalPanel] = useState(false);\r\n  const [showGoalReached, setShowGoalReached] = useState(false);\r\n\r\n  const settingsBackdrop = useRef();\r\n\r\n  useEffect(() => {\r\n    setSessionWrong(0);\r\n    setSessionCorrect(0);\r\n  }, [props.isAuth]);\r\n\r\n  useEffect(() => {\r\n    if (props.totChordCorrect < props.chordGoal) {\r\n      setShowGoalReached(false);\r\n    }\r\n  }, [props.chordGoal]);\r\n\r\n  const startGameHandler = () => {\r\n    if (!gameFirstStart) {\r\n      setGameFirstStart(true);\r\n      gameLoop();\r\n      setTimeout(() => setShowGoalPanel(true), 2000);\r\n    }\r\n    setStartGame(true);\r\n  };\r\n\r\n  const gameLoop = () => {\r\n    const [root, third, fifth, newChord] = getMajMinChord(disabledRoots, chordType);\r\n    const newRootSound = new Audio(`/assets/notes/${root}.mp3`);\r\n    const newThirdSound = new Audio(`/assets/notes/${third}.mp3`);\r\n    const newFifthSound = new Audio(`/assets/notes/${fifth}.mp3`);\r\n    setRootNote(root);\r\n    setThirdNote(third);\r\n    setFifthNote(fifth);\r\n    setChord(newChord);\r\n    setRootSound(newRootSound);\r\n    setThirdSound(newThirdSound);\r\n    setFifthSound(newFifthSound);\r\n    if (!volumeOn) { return; }\r\n    newRootSound.autoplay = false;\r\n    newThirdSound.autoplay = false;\r\n    newFifthSound.autoplay = false;\r\n    newRootSound.play();\r\n    newThirdSound.play();\r\n    newFifthSound.play();\r\n  };\r\n\r\n  const repeatNotes = () => {\r\n    rootSound.pause();\r\n    thirdSound.pause();\r\n    fifthSound.pause();\r\n    rootSound.currentTime = 0;\r\n    thirdSound.currentTime = 0;\r\n    fifthSound.currentTime = 0;\r\n    if (!volumeOn) { return; }\r\n    rootSound.play();\r\n    thirdSound.play();\r\n    fifthSound.play();\r\n  };\r\n\r\n  const checkAnswer = (e) => {\r\n    if (e.target.value === getNoteShorthand(rootNote) && selectedChord === chord) {\r\n      rootSound.pause();\r\n      thirdSound.pause();\r\n      fifthSound.pause();\r\n      rootSound.muted = true;\r\n      thirdSound.muted = true;\r\n      fifthSound.muted = true;\r\n      props.incCorrect();\r\n      if (props.chordGoal > 0 && props.totCorrect + 1 === props.chordGoal) {\r\n        setShowGoalReached(true);\r\n      }\r\n      setSessionCorrect(prevCorrect => prevCorrect + 1);\r\n      setAnimCorrect(true);\r\n      setTimeout(() => {\r\n        setNoCorrAnim(false);\r\n        setAnimCorrect(false);\r\n        gameLoop();\r\n      }, 300);\r\n    } else {\r\n      props.incWrong();\r\n      setAnimWrong(true);\r\n      setTimeout(() => {\r\n        setAnimWrong(false);\r\n      }, 300);\r\n      setSessionWrong(prevWrong => prevWrong + 1);\r\n    }\r\n  };\r\n\r\n  const toggleChord = (e) => {\r\n    const val = e.target.value;\r\n    if (disabledRoots.includes(val)) {\r\n      setDisabledRoots(prevRoots => prevRoots.filter(root => root !== val));\r\n      if (disabledRoots.length < 12) {\r\n        setShowSettingsErr(false);\r\n        setSettingsErrMsg('');\r\n      }\r\n    } else {\r\n      setDisabledRoots(prevRoots => prevRoots.concat([val]));\r\n      if (disabledRoots.length > 9) {\r\n        setShowSettingsErr(true);\r\n        setSettingsErrMsg('You need to have at least two chords enabled.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const closeSettingsHandler = (always, e) => {\r\n    // always closes if close btn clicked\r\n    if ((showSettingsErr || e.target !== settingsBackdrop.current) && !always) { return; }\r\n    setShowSettings(false);\r\n    if (disabledRoots.includes(getNoteShorthand(rootNote)) || chordType !== prevChordType) {\r\n      setNoCorrAnim(true);\r\n      setPrevChordType(chordType);\r\n      gameLoop();\r\n    }\r\n  };\r\n\r\n  const toggleAudio = () => {\r\n    rootSound.muted = volumeOn;\r\n    thirdSound.muted = volumeOn;\r\n    fifthSound.muted = volumeOn;\r\n    rootSound.pause();\r\n    thirdSound.pause();\r\n    fifthSound.pause();\r\n    setVolumeOn(prev => !prev);\r\n  };\r\n\r\n  return (\r\n    <div className={!startGame || showSettings ? [classes.Content, classes.NoScroll].join(' ') : classes.Content}>\r\n      <GoalPanel show={showGoalPanel} />\r\n      <GoalReachedPanel\r\n        show={showGoalReached}\r\n        mode=\"Chord\"\r\n        close={() => setShowGoalReached(false)} />\r\n      <h1 className={classes.Title}>Chord Trainer</h1>\r\n      <div className={classes.TopBar}>\r\n        <TopBtns\r\n          showSettings={() => { setShowSettings(true); setShowGoalReached(false); }}\r\n          pause={() => { setStartGame(false); setShowGoalReached(false); }}\r\n          repeat={repeatNotes}\r\n          started={startGame}\r\n          mode=\"Chord\"\r\n          clicked={toggleAudio}\r\n          volumeOn={volumeOn} />\r\n        <h1 className={classes.InnerTitle}>Chord Trainer</h1>\r\n        <SessionStats\r\n          animCorrect={animCorrect}\r\n          animWrong={animWrong}\r\n          correct={sessionCorrect}\r\n          wrong={sessionWrong} />\r\n      </div>\r\n      <Guitar\r\n        rootNote={rootNote}\r\n        otherNotes={[thirdNote, fifthNote]}\r\n        noAnim={noCorrAnim} />\r\n      <NoteContainer\r\n        disabledBtns={disabledRoots}\r\n        checkAnswer={checkAnswer}\r\n        mode=\"Chord\"\r\n        selectedChord={selectedChord}\r\n        setSelected={(int) => setSelectedChord(int)} />\r\n      <StartPanel\r\n        mode=\"Chord\"\r\n        started={startGameHandler}\r\n        startGame={startGame} />\r\n      <SettingsPanel\r\n        showSettings={showSettings}\r\n        ref={settingsBackdrop}\r\n        close={closeSettingsHandler}\r\n        mode=\"Chord\"\r\n        toggle={toggleChord}\r\n        disabledBtns={disabledRoots}\r\n        showErr={showSettingsErr}\r\n        errMsg={settingsErrMsg}\r\n        setType={(type) => setChordType(type)}\r\n        intType={chordType} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  totCorrect: state.stats.totChordCorrectToday,\r\n  chordGoal: state.goals.chordGoal,\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  incCorrect: () => dispatch(incCorrectChord()),\r\n  incWrong: () => dispatch(incWrongChord())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChordTrainer);\r\n"],"sourceRoot":""}