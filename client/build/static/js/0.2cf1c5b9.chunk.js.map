{"version":3,"sources":["components/SettingsPanel/SettingsPanel.js","components/NoteContainer/NoteContainer.js","components/GoalReachedPanel/GoalReachedPanel.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/Guitar/Guitar.js","components/Guitar/Guitar.module.css","components/TrainerTopBtns/TrainerTopBtns.module.css","components/SessionStats/SessionStats.module.css","components/StartPanel/StartPanel.module.css","components/SettingsPanel/SettingsPanel.module.css","components/NoteContainer/NoteContainer.module.css","components/GoalReachedPanel/GoalReachedPanel.module.css","components/TrainerTopBtns/TrainerTopBtns.js","components/SessionStats/SessionStats.js","components/StartPanel/StartPanel.js"],"names":["SettingsPanel","React","forwardRef","props","ref","useState","showPracInfo","setShowPracInfo","in","showSettings","timeout","classNames","mountOnEnter","unmountOnExit","className","classes","ShowSettings","onClick","e","close","SettingsDiv","SettingsTop","SettingsTitle","mode","SettingsIntervals","intervals","map","interval","toggle","value","key","disabledBtns","includes","SettingIntDisabled","SettingIntEnabled","aScale","scaleNote","showErr","SettingsErrMsg","HideOpacity","errMsg","Fragment","SettingsBtns","setType","intType","BtnSelected","BtnUnselected","Question","prev","questionCircle2","InfoText","Hide","Switch","type","checked","pracMode","onChange","setMode","Slider","NoteContainer","Notes","checkAnswer","NoteDisabled","NoteEnabled","ChordTypes","setSelected","selectedChord","ActiveType","InactiveType","GoalReachedPanel","show","Panel","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","Guitar","GuitarOuterContainer","GuitarInnerContainer","First","Fret","join","el","i","Dots","Strings","OpenNotes","LowE","B","G","D","A","HighE","LowENotes","ANotes","DNotes","GNotes","BNotes","HighENotes","elClass","notes","slice","note","rootNote","RootNote","otherNotes","OtherNote","noAnim","HideNoAnim","HiddenNote","getNoteShorthand","module","exports","TopBtns","spin","setSpin","settingsIcon","pause","questionCircle","RepeatNotes","repeat","setTimeout","Spin","NoSpin","repeatIcon","started","Hidden","ArrowUp","arrowUp","RepeatText","clicked","volumeOn","volumeOnIcon","volumeOffIcon","SessionStats","CheckMark","checkMark","animCorrect","NumAnim","SessionNum","correct","XIcon","xIcon","animWrong","wrong","StartPanel","startGame","ShowStart","ExampleTitle","StartBtn","RootExample","TargetExample"],"mappings":"sLAQMA,EAAgBC,IAAMC,YAAW,SAACC,EAAOC,GAAS,IAAD,EACbC,oBAAS,GADI,mBAC9CC,EAD8C,KAChCC,EADgC,KAGrD,OACE,kBAAC,IAAD,CAAeC,GAAIL,EAAMM,aAAcC,QAAS,IAAKC,WAAW,eAAeC,cAAY,EAACC,eAAa,GACvG,yBAAKC,UAAWC,IAAQC,aAAcC,QAAS,SAACC,GAAD,OAAOf,EAAMgB,OAAM,EAAOD,IAAId,IAAKA,GAChF,yBAAKU,UAAWC,IAAQK,aACtB,yBAAKN,UAAWC,IAAQM,aACtB,kBAAC,IAAD,CAAUF,MAAO,SAACD,GAAD,OAAOf,EAAMgB,OAAM,EAAMD,OAE5C,0BAAMJ,UAAWC,IAAQO,eACP,aAAfnB,EAAMoB,KAAsB,yCAA0D,UAAfpB,EAAMoB,KAC9E,sCAAwC,sCAE1C,yBAAKT,UAAWC,IAAQS,mBACN,aAAfrB,EAAMoB,KAEHE,IAAUC,KAAI,SAAAC,GAAQ,OACtB,4BAAQV,QAASd,EAAMyB,OAAQC,MAAOF,EAAUG,IAAKH,EACrDb,UAAYX,EAAM4B,aAAcC,SAASL,GAAYZ,IAAQkB,mBAAqBlB,IAAQmB,mBACzFP,MAGDQ,IAAOT,KAAI,SAAAU,GAAS,OAClB,4BAAQnB,QAASd,EAAMyB,OAAQC,MAAOO,EAAWN,IAAKM,EACtDtB,UAAYX,EAAM4B,aAAcC,SAASI,GAAarB,IAAQkB,mBAAqBlB,IAAQmB,mBAC1FE,OAKT,0BAAMtB,UAAWX,EAAMkC,QAAUtB,IAAQuB,eAAiBvB,IAAQwB,aAAcpC,EAAMqC,QACtE,aAAfrC,EAAMoB,KAEH,kBAAC,IAAMkB,SAAP,KACE,0BAAM3B,UAAWC,IAAQO,eAAzB,+CACA,yBAAKR,UAAWC,IAAQ2B,cACtB,4BAAQzB,QAAS,kBAAMd,EAAMwC,QAAQ,cACrC7B,UAA6B,cAAlBX,EAAMyC,QAA0B7B,IAAQ8B,YAAc9B,IAAQ+B,eADzE,aAGA,4BAAQ7B,QAAS,kBAAMd,EAAMwC,QAAQ,eACrC7B,UAA6B,eAAlBX,EAAMyC,QAA2B7B,IAAQ8B,YAAc9B,IAAQ+B,eAD1E,cAGA,4BAAQ7B,QAAS,kBAAMd,EAAMwC,QAAQ,SACrC7B,UAA6B,SAAlBX,EAAMyC,QAAqB7B,IAAQ8B,YAAc9B,IAAQ+B,eADpE,UAKa,UAAf3C,EAAMoB,KAER,kBAAC,IAAMkB,SAAP,KACE,0BAAM3B,UAAWC,IAAQO,eAAzB,mCACA,yBAAKR,UAAWC,IAAQ2B,cACtB,4BAAQzB,QAAS,kBAAMd,EAAMwC,QAAQ,UACrC7B,UAA6B,UAAlBX,EAAMyC,QAAsB7B,IAAQ8B,YAAc9B,IAAQ+B,eADrE,SAGA,4BAAQ7B,QAAS,kBAAMd,EAAMwC,QAAQ,UACrC7B,UAA6B,UAAlBX,EAAMyC,QAAsB7B,IAAQ8B,YAAc9B,IAAQ+B,eADrE,SAGA,4BAAQ7B,QAAS,kBAAMd,EAAMwC,QAAQ,SACrC7B,UAA6B,SAAlBX,EAAMyC,QAAqB7B,IAAQ8B,YAAc9B,IAAQ+B,eADpE,UAKF,KAEN,0BAAMhC,UAAWC,IAAQO,eAAzB,gBAEE,0BAAMR,UAAWC,IAAQgC,SAAU9B,QAAS,kBAAMV,GAAgB,SAAAyC,GAAI,OAAKA,OACxEC,MAGL,0BAAMnC,UAAWR,EAAeS,IAAQmC,SAAWnC,IAAQoC,MAA3D,oFAGA,2BAAOrC,UAAWC,IAAQqC,QACxB,2BAAOC,KAAK,WAAWC,QAASnD,EAAMoD,SAAUC,SAAUrD,EAAMsD,UAChE,0BAAM3C,UAAWC,IAAQ2C,gBAQtB1D,O,iCC7Ff,8CAkCe2D,IA9BO,SAAAxD,GAAK,OACzB,yBAAKW,UAAWC,IAAQ4C,eACtB,yBAAK7C,UAAWC,IAAQ6C,OACN,SAAfzD,EAAMoB,MAAkC,UAAfpB,EAAMoB,KAE5BY,IAAOT,KAAI,SAAAU,GAAS,OAClB,4BAAQnB,QAASd,EAAM0D,YAAahC,MAAOO,EAAWN,IAAKM,EAC3DtB,UAAYX,EAAM4B,aAAcC,SAASI,GAAarB,IAAQ+C,aAAe/C,IAAQgD,aACpF3B,MAGHX,IAAUC,KAAI,SAAAC,GAAQ,OACpB,4BAAQV,QAASd,EAAM0D,YAAahC,MAAOF,EAAUG,IAAKH,EAC1Db,UAAYX,EAAM4B,aAAcC,SAASL,GAAYZ,IAAQ+C,aAAe/C,IAAQgD,aACnFpC,MAIS,UAAfxB,EAAMoB,KAAmB,KACxB,yBAAKT,UAAWC,IAAQiD,YACtB,4BAAQ/C,QAAS,kBAAMd,EAAM8D,YAAY,MACzCnD,UAAmC,MAAxBX,EAAM+D,cAAwBnD,IAAQoD,WAAapD,IAAQqD,cADtE,SAEA,4BAAQnD,QAAS,kBAAMd,EAAM8D,YAAY,OACzCnD,UAAmC,OAAxBX,EAAM+D,cAAyBnD,IAAQoD,WAAapD,IAAQqD,cADvE,c,iCC1BV,oDAceC,IATU,SAAAlE,GAAK,OAC5B,kBAAC,IAAD,CAAeK,GAAIL,EAAMmE,KAAM5D,QAAS,IAAKC,WAAW,eAAeC,cAAY,EAACC,eAAa,GAC/F,yBAAKC,UAAWC,IAAQwD,OACtB,kDAAwBpE,EAAMoB,KAA9B,4BACA,4BAAQN,QAASd,EAAMgB,OAAvB,uB,yDCLS,SAASqD,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,OAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgBJ,IAAQ,OAAAS,EAAA,GAA2BT,IGLvE,WACb,MAAM,IAAIU,UAAU,wIHIwE,G,8CI2C/EC,IA5CA,SAAAjF,GAAK,OAClB,yBAAKW,UAAWC,IAAQsE,sBACtB,yBAAKvE,UAAWC,IAAQuE,sBACvB,yBAAKxE,UAAWC,IAAQqE,QACvB,yBAAKtE,UAAW,CAACC,IAAQwE,MAAOxE,IAAQyE,MAAMC,KAAK,OAChD,EAAIf,MAAM,KAAKhD,KAAI,SAACgE,EAAIC,GAAL,OAAW,yBAAK7E,UAAWC,IAAQyE,KAAM1D,IAAK6D,OACpE,wBAAI7E,UAAWC,IAAQ6E,MAClB,EAAIlB,MAAM,IAAIhD,KAAI,SAACgE,EAAIC,GAAL,OAAW,wBAAI7D,IAAK6D,QAE3C,wBAAI7E,UAAWC,IAAQ8E,SAClB,EAAInB,MAAM,IAAIhD,KAAI,SAACgE,EAAIC,GAAL,OAAW,wBAAI7D,IAAK6D,QAE3C,wBAAI7E,UAAWC,IAAQ+E,WACtB,wBAAIhF,UAAWC,IAAQgF,MAAvB,KACA,wBAAIjF,UAAWC,IAAQiF,GAAvB,KACA,wBAAIlF,UAAWC,IAAQkF,GAAvB,KACA,wBAAInF,UAAWC,IAAQmF,GAAvB,KACA,wBAAIpF,UAAWC,IAAQoF,GAAvB,KACA,wBAAIrF,UAAWC,IAAQqF,OAAvB,MAEC,yBAAKtF,UAAWC,IAAQ4C,eACrB,CAAC5C,IAAQsF,UAAWtF,IAAQuF,OAAQvF,IAAQwF,OAAQxF,IAAQyF,OAAQzF,IAAQ0F,OAAQ1F,IAAQ2F,YAC1FhF,KAAI,SAACiF,EAAShB,GAAV,OACL,yBAAK7E,UAAW,CAACC,IAAQ6C,MAAO+C,GAASlB,KAAK,KAAM3D,IAAK6D,GACvD,4BACGiB,IAAMC,MAAY,GAAJlB,EAAe,EAAJA,EAAe,GAAJA,EAAe,EAAJA,EAAU,IAAIjE,KAAI,SAAAoF,GAAI,OACpE,wBAAIhF,IAAKgF,EACThG,UACEX,EAAM4G,WAAaD,EAAO/F,IAAQiG,SAClC7G,EAAM8G,WAAWjF,SAAS8E,GAAQ/F,IAAQmG,UAC1C/G,EAAMgH,OAASpG,IAAQqG,WACvBrG,IAAQsG,YACPlH,EAAM4G,WAAaD,EAAO,IAAM3G,EAAM8G,WAAWjF,SAAS8E,GAAQ,GAAKQ,YAAiBR,kB,oBCnC7GS,EAAOC,QAAU,CAAC,OAAS,uBAAuB,qBAAuB,qCAAqC,qBAAuB,qCAAqC,UAAY,0BAA0B,KAAO,qBAAqB,EAAI,kBAAkB,EAAI,kBAAkB,EAAI,kBAAkB,MAAQ,sBAAsB,KAAO,qBAAqB,MAAQ,sBAAsB,KAAO,qBAAqB,QAAU,wBAAwB,cAAgB,8BAA8B,MAAQ,sBAAsB,OAAS,uBAAuB,OAAS,uBAAuB,OAAS,uBAAuB,OAAS,uBAAuB,WAAa,2BAA2B,SAAW,yBAAyB,UAAY,0BAA0B,WAAa,2BAA2B,QAAU,wBAAwB,WAAa,6B,oBCAz1BD,EAAOC,QAAU,CAAC,QAAU,gCAAgC,OAAS,+BAA+B,QAAU,gCAAgC,WAAa,mCAAmC,OAAS,+BAA+B,KAAO,+B,oBCA7OD,EAAOC,QAAU,CAAC,aAAe,mCAAmC,UAAY,gCAAgC,MAAQ,4BAA4B,WAAa,iCAAiC,QAAU,8BAA8B,QAAU,gC,oBCApPD,EAAOC,QAAU,CAAC,UAAY,8BAA8B,WAAa,+BAA+B,aAAe,iCAAiC,SAAW,6BAA6B,YAAc,gCAAgC,cAAgB,oC,oBCA9PD,EAAOC,QAAU,CAAC,aAAe,oCAAoC,KAAO,4BAA4B,YAAc,mCAAmC,YAAc,mCAAmC,cAAgB,qCAAqC,kBAAoB,yCAAyC,kBAAoB,yCAAyC,mBAAqB,0CAA0C,eAAiB,sCAAsC,YAAc,mCAAmC,aAAe,oCAAoC,YAAc,mCAAmC,cAAgB,qCAAqC,SAAW,gCAAgC,SAAW,gCAAgC,OAAS,8BAA8B,OAAS,gC,oBCA/zBD,EAAOC,QAAU,CAAC,WAAa,kCAAkC,WAAa,kCAAkC,aAAe,oCAAoC,cAAgB,qCAAqC,MAAQ,6BAA6B,YAAc,mCAAmC,aAAe,sC,oBCA7TD,EAAOC,QAAU,CAAC,MAAQ,kC,oFC4BXC,IAzBC,SAAAtH,GAAU,IAAD,EACCE,qBADD,mBAChBqH,EADgB,KACVC,EADU,KASvB,OACE,yBAAK7G,UAAWC,IAAQ0G,SACtB,4BAAQxG,QAASd,EAAMM,cAAemH,KACtC,4BAAQ3G,QAASd,EAAM0H,OAAQC,KAC/B,4BAAQhH,UAAWC,IAAQgH,YAAa9G,QAV7B,WACbd,EAAM6H,SACNL,GAAQ,GACRM,YAAW,kBAAMN,GAAQ,KAAQ,OAQ7B,0BAAM7G,UAAW4G,EAAO3G,IAAQmH,KAAMnH,IAAQoH,QAASC,KACvD,0BAAMtH,UAAWX,EAAMkI,QAAUtH,IAAQuH,OAASvH,IAAQwH,SAAUC,KACpE,0BAAM1H,UAAWX,EAAMkI,QAAUtH,IAAQuH,OAASvH,IAAQ0H,YACxC,aAAftI,EAAMoB,MAAsC,UAAfpB,EAAMoB,KAAmB,mBAAqB,oBAGhF,4BAAQN,QAASd,EAAMuI,SAAUvI,EAAMwI,SAAWC,IAAeC,Q,gCCxBvE,6CAqBeC,IAjBM,SAAA3I,GAAK,OACxB,yBAAKW,UAAWC,IAAQ+H,cACtB,6BACE,0BAAMhI,UAAWC,IAAQgI,WAAYC,KACrC,0BAAMlI,UAAWX,EAAM8I,YAAc,CAAClI,IAAQmI,QAASnI,IAAQoI,YAAY1D,KAAK,KAAO1E,IAAQoI,YAC5FhJ,EAAMiJ,UAGX,6BACE,0BAAMtI,UAAWC,IAAQsI,OAAQC,KACjC,0BAAMxI,UAAWX,EAAMoJ,UAAY,CAACxI,IAAQmI,QAASnI,IAAQoI,YAAY1D,KAAK,KAAO1E,IAAQoI,YAC1FhJ,EAAMqJ,W,gCCff,oDA6BeC,IAxBI,SAAAtJ,GAAK,OACtB,kBAAC,IAAD,CAAeK,IAAKL,EAAMuJ,UAAWhJ,QAAS,IAAKC,WAAW,eAAeC,cAAY,EAACC,eAAa,GACrG,yBAAKC,UAAWC,IAAQ4I,WACtB,yBAAK7I,UAAWC,IAAQ0I,YACtB,0BAAM3I,UAAWC,IAAQ6I,cACP,aAAfzJ,EAAMoB,KAAsB,4CACd,UAAfpB,EAAMoB,KAAmB,sCAAwC,iBAEnE,4BAAQT,UAAWC,IAAQ8I,SAAU5I,QAASd,EAAMkI,SAApD,QACgB,aAAflI,EAAMoB,MAAsC,UAAfpB,EAAMoB,KAClC,yBAAKT,UAAWC,IAAQ+I,aACtB,qCACA,4CAEA,KACJ,yBAAKhJ,UAAWC,IAAQgJ,eACtB,iCACA,8BAAsB,UAAf5J,EAAMoB,KAAmB,aAAe","file":"static/js/0.2cf1c5b9.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport classes from './SettingsPanel.module.css';\r\nimport CloseBtn from '../UI/CloseBtn/CloseBtn';\r\nimport { intervals, aScale } from '../../utils/intervalFuncs';\r\nimport '../UI/compAnims.css';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { questionCircle2 } from '../UI/UIIcons';\r\n\r\nconst SettingsPanel = React.forwardRef((props, ref) => {\r\n  const [showPracInfo, setShowPracInfo] = useState(false);\r\n\r\n  return (\r\n    <CSSTransition in={props.showSettings} timeout={450} classNames=\"PanelOpacity\" mountOnEnter unmountOnExit>\r\n      <div className={classes.ShowSettings} onClick={(e) => props.close(false, e)} ref={ref}>\r\n        <div className={classes.SettingsDiv}>\r\n          <div className={classes.SettingsTop}>\r\n            <CloseBtn close={(e) => props.close(true, e)} />\r\n          </div>\r\n          <span className={classes.SettingsTitle}>\r\n            {props.mode === 'Interval' ? 'Enable or disable individual intervals' : props.mode === 'Chord' ?\r\n            'Enable or disable individual chords' : 'Enable or disable individual notes'}\r\n          </span>\r\n          <div className={classes.SettingsIntervals}>\r\n            {props.mode === 'Interval' ?\r\n              (\r\n                intervals.map(interval => (\r\n                <button onClick={props.toggle} value={interval} key={interval}\r\n                className={(props.disabledBtns).includes(interval) ? classes.SettingIntDisabled : classes.SettingIntEnabled}>\r\n                {interval}</button>\r\n                ))\r\n              ) : (\r\n                aScale.map(scaleNote => (\r\n                  <button onClick={props.toggle} value={scaleNote} key={scaleNote}\r\n                  className={(props.disabledBtns).includes(scaleNote) ? classes.SettingIntDisabled : classes.SettingIntEnabled}>\r\n                  {scaleNote}</button>\r\n                ))\r\n              )\r\n            }\r\n          </div>\r\n          <span className={props.showErr ? classes.SettingsErrMsg : classes.HideOpacity}>{props.errMsg}</span>\r\n          {props.mode === 'Interval' ?\r\n            (\r\n              <React.Fragment>\r\n                <span className={classes.SettingsTitle}>Show only ascending or descending intervals</span>\r\n                <div className={classes.SettingsBtns}>\r\n                  <button onClick={() => props.setType('Ascending')}\r\n                  className={props.intType === 'Ascending' ? classes.BtnSelected : classes.BtnUnselected}>\r\n                  Ascending</button>\r\n                  <button onClick={() => props.setType('Descending')}\r\n                  className={props.intType === 'Descending' ? classes.BtnSelected : classes.BtnUnselected}>\r\n                  Descending</button>\r\n                  <button onClick={() => props.setType('Both')}\r\n                  className={props.intType === 'Both' ? classes.BtnSelected : classes.BtnUnselected}>\r\n                  Both</button>\r\n                </div>\r\n              </React.Fragment>\r\n            ) : props.mode === 'Chord' ?\r\n            (\r\n              <React.Fragment>\r\n                <span className={classes.SettingsTitle}>Show only major or minor chords</span>\r\n                <div className={classes.SettingsBtns}>\r\n                  <button onClick={() => props.setType('Major')}\r\n                  className={props.intType === 'Major' ? classes.BtnSelected : classes.BtnUnselected}>\r\n                  Major</button>\r\n                  <button onClick={() => props.setType('Minor')}\r\n                  className={props.intType === 'Minor' ? classes.BtnSelected : classes.BtnUnselected}>\r\n                  Minor</button>\r\n                  <button onClick={() => props.setType('Both')}\r\n                  className={props.intType === 'Both' ? classes.BtnSelected : classes.BtnUnselected}>\r\n                  Both</button>\r\n                </div>\r\n              </React.Fragment>\r\n            ) : null\r\n          }\r\n          <span className={classes.SettingsTitle}>\r\n            Practice Mode\r\n            <span className={classes.Question} onClick={() => setShowPracInfo(prev => !prev)}>\r\n              {questionCircle2}\r\n            </span>\r\n          </span>\r\n          <span className={showPracInfo ? classes.InfoText : classes.Hide}>\r\n            Practice Mode shows you the notes or intervals you tend to get wrong more often.\r\n          </span>\r\n          <label className={classes.Switch}>\r\n            <input type=\"checkbox\" checked={props.pracMode} onChange={props.setMode} />\r\n            <span className={classes.Slider}></span>\r\n          </label>\r\n        </div>\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n});\r\n\r\nexport default SettingsPanel;\r\n","import React from 'react';\r\nimport classes from './NoteContainer.module.css';\r\nimport { aScale, intervals } from '../../utils/intervalFuncs';\r\n\r\nconst NoteContainer = props => (\r\n  <div className={classes.NoteContainer}>\r\n    <div className={classes.Notes}>\r\n      {props.mode === 'Note' || props.mode === 'Chord' ?\r\n        (\r\n          aScale.map(scaleNote => (\r\n            <button onClick={props.checkAnswer} value={scaleNote} key={scaleNote}\r\n            className={(props.disabledBtns).includes(scaleNote) ? classes.NoteDisabled : classes.NoteEnabled}>\r\n            {scaleNote}</button>\r\n          ))\r\n        ) : (\r\n          intervals.map(interval => (\r\n            <button onClick={props.checkAnswer} value={interval} key={interval}\r\n            className={(props.disabledBtns).includes(interval) ? classes.NoteDisabled : classes.NoteEnabled}>\r\n            {interval}</button>\r\n          ))\r\n        )\r\n      }\r\n      {props.mode !== 'Chord' ? null : (\r\n        <div className={classes.ChordTypes}>\r\n          <button onClick={() => props.setSelected('3')}\r\n          className={props.selectedChord === '3' ? classes.ActiveType : classes.InactiveType}>Major</button>\r\n          <button onClick={() => props.setSelected('b3')}\r\n          className={props.selectedChord === 'b3' ? classes.ActiveType : classes.InactiveType}>Minor</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default NoteContainer;\r\n","import React from 'react';\r\nimport classes from './GoalReachedPanel.module.css';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport '../UI/compAnims.css';\r\n\r\nconst GoalReachedPanel = props => (\r\n  <CSSTransition in={props.show} timeout={450} classNames=\"PanelOpacity\" mountOnEnter unmountOnExit>\r\n    <div className={classes.Panel}>\r\n      <p>You've reached your {props.mode} Trainer goal for today!</p>\r\n      <button onClick={props.close}>Keep practicing</button>\r\n    </div>\r\n  </CSSTransition>\r\n);\r\n\r\nexport default GoalReachedPanel;\r\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from 'react';\r\nimport classes from './Guitar.module.css';\r\nimport { notes, getNoteShorthand } from '../../utils/intervalFuncs';\r\n\r\nconst Guitar = props => (\r\n  <div className={classes.GuitarOuterContainer}>\r\n    <div className={classes.GuitarInnerContainer}>\r\n    \t<div className={classes.Guitar}>\r\n    \t\t<div className={[classes.First, classes.Fret].join(' ')}></div>\r\n        {[...Array(12)].map((el, i) => <div className={classes.Fret} key={i}></div>)}\r\n    \t\t<ul className={classes.Dots}>\r\n          {[...Array(4)].map((el, i) => <li key={i}></li>)}\r\n    \t\t</ul>\r\n    \t\t<ul className={classes.Strings}>\r\n          {[...Array(6)].map((el, i) => <li key={i}></li>)}\r\n    \t\t</ul>\r\n    \t\t<ul className={classes.OpenNotes}>\r\n    \t\t\t<li className={classes.LowE}>E</li>\r\n    \t\t\t<li className={classes.B}>B</li>\r\n    \t\t\t<li className={classes.G}>G</li>\r\n    \t\t\t<li className={classes.D}>D</li>\r\n    \t\t\t<li className={classes.A}>A</li>\r\n    \t\t\t<li className={classes.HighE}>E</li>\r\n    \t\t</ul>\r\n        <div className={classes.NoteContainer}>\r\n          {[classes.LowENotes, classes.ANotes, classes.DNotes, classes.GNotes, classes.BNotes, classes.HighENotes]\r\n            .map((elClass, i) => (\r\n            <div className={[classes.Notes, elClass].join(' ')} key={i}>\r\n              <ul>\r\n                {notes.slice(((i * 12) + (i * 1)), ((i * 12) + (i * 1)) + 13).map(note => (\r\n                  <li key={note}\r\n                  className={\r\n                    props.rootNote === note ? classes.RootNote :\r\n                    props.otherNotes.includes(note) ? classes.OtherNote :\r\n                    props.noAnim ? classes.HideNoAnim :\r\n                    classes.HiddenNote}>\r\n                    {props.rootNote === note ? 'R' : props.otherNotes.includes(note) ? '' : getNoteShorthand(note)}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          ))}\r\n  \t\t  </div>\r\n    \t</div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Guitar;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Guitar\":\"Guitar_Guitar__3TyP-\",\"GuitarOuterContainer\":\"Guitar_GuitarOuterContainer__TnqMQ\",\"GuitarInnerContainer\":\"Guitar_GuitarInnerContainer__3fssv\",\"OpenNotes\":\"Guitar_OpenNotes__1H1l5\",\"LowE\":\"Guitar_LowE__1eGBA\",\"B\":\"Guitar_B__3nDQx\",\"G\":\"Guitar_G__3SZL1\",\"A\":\"Guitar_A__Knfvi\",\"HighE\":\"Guitar_HighE__L5gNg\",\"Fret\":\"Guitar_Fret__2kX8Y\",\"First\":\"Guitar_First__FIh5f\",\"Dots\":\"Guitar_Dots__2m0r_\",\"Strings\":\"Guitar_Strings__26JWk\",\"NoteContainer\":\"Guitar_NoteContainer__gL9hm\",\"Notes\":\"Guitar_Notes__zP5tK\",\"ANotes\":\"Guitar_ANotes__1d0CH\",\"DNotes\":\"Guitar_DNotes__3qaim\",\"GNotes\":\"Guitar_GNotes___o4Wx\",\"BNotes\":\"Guitar_BNotes__D30C9\",\"HighENotes\":\"Guitar_HighENotes__zSNHn\",\"RootNote\":\"Guitar_RootNote__2Dmsr\",\"OtherNote\":\"Guitar_OtherNote__1Uo1P\",\"HiddenNote\":\"Guitar_HiddenNote__24Xon\",\"scaleUp\":\"Guitar_scaleUp__1FV0S\",\"HideNoAnim\":\"Guitar_HideNoAnim__2XIqy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TopBtns\":\"TrainerTopBtns_TopBtns__3Skaw\",\"Hidden\":\"TrainerTopBtns_Hidden__1GlYj\",\"ArrowUp\":\"TrainerTopBtns_ArrowUp__3dcLF\",\"RepeatText\":\"TrainerTopBtns_RepeatText__2OFfD\",\"NoSpin\":\"TrainerTopBtns_NoSpin__1ph8I\",\"Spin\":\"TrainerTopBtns_Spin__3corS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SessionStats\":\"SessionStats_SessionStats__2AOms\",\"CheckMark\":\"SessionStats_CheckMark__2thai\",\"XIcon\":\"SessionStats_XIcon__3yZ48\",\"SessionNum\":\"SessionStats_SessionNum__ZAuYL\",\"NumAnim\":\"SessionStats_NumAnim__2hpFC\",\"scaleUp\":\"SessionStats_scaleUp__1atiH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ShowStart\":\"StartPanel_ShowStart__1Ihrn\",\"StartPanel\":\"StartPanel_StartPanel__2OYBJ\",\"ExampleTitle\":\"StartPanel_ExampleTitle__2iuEq\",\"StartBtn\":\"StartPanel_StartBtn__2yDu7\",\"RootExample\":\"StartPanel_RootExample__2CRCG\",\"TargetExample\":\"StartPanel_TargetExample__3K2Ut\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ShowSettings\":\"SettingsPanel_ShowSettings__j1Ul1\",\"Hide\":\"SettingsPanel_Hide__1oNCf\",\"SettingsDiv\":\"SettingsPanel_SettingsDiv__1vN0W\",\"SettingsTop\":\"SettingsPanel_SettingsTop__2WxnF\",\"SettingsTitle\":\"SettingsPanel_SettingsTitle__3_qxj\",\"SettingsIntervals\":\"SettingsPanel_SettingsIntervals___E8nm\",\"SettingIntEnabled\":\"SettingsPanel_SettingIntEnabled__3cE1t\",\"SettingIntDisabled\":\"SettingsPanel_SettingIntDisabled__24aay\",\"SettingsErrMsg\":\"SettingsPanel_SettingsErrMsg__2Q6-W\",\"HideOpacity\":\"SettingsPanel_HideOpacity__lhFFz\",\"SettingsBtns\":\"SettingsPanel_SettingsBtns__3a6vx\",\"BtnSelected\":\"SettingsPanel_BtnSelected__1dA8c\",\"BtnUnselected\":\"SettingsPanel_BtnUnselected__2q2Cr\",\"Question\":\"SettingsPanel_Question__1RK2Z\",\"InfoText\":\"SettingsPanel_InfoText__2OAwB\",\"Switch\":\"SettingsPanel_Switch__3un0x\",\"Slider\":\"SettingsPanel_Slider__3e52K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ChordTypes\":\"NoteContainer_ChordTypes__1rb2C\",\"ActiveType\":\"NoteContainer_ActiveType__19Y7s\",\"InactiveType\":\"NoteContainer_InactiveType__3ORVT\",\"NoteContainer\":\"NoteContainer_NoteContainer__1NOoh\",\"Notes\":\"NoteContainer_Notes__3CP8l\",\"NoteEnabled\":\"NoteContainer_NoteEnabled__14AqJ\",\"NoteDisabled\":\"NoteContainer_NoteDisabled__9jGAo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Panel\":\"GoalReachedPanel_Panel__1U53h\"};","import React, { useState } from 'react';\r\nimport classes from './TrainerTopBtns.module.css';\r\nimport { settingsIcon, questionCircle, repeatIcon, arrowUp, volumeOnIcon, volumeOffIcon } from '../UI/UIIcons';\r\n\r\nconst TopBtns = props => {\r\n  const [spin, setSpin] = useState();\r\n\r\n  const repeat = () => {\r\n    props.repeat();\r\n    setSpin(true);\r\n    setTimeout(() => setSpin(false), 500);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.TopBtns}>\r\n      <button onClick={props.showSettings}>{settingsIcon}</button>\r\n      <button onClick={props.pause}>{questionCircle}</button>\r\n      <button className={classes.RepeatNotes} onClick={repeat}>\r\n        <span className={spin ? classes.Spin: classes.NoSpin}>{repeatIcon}</span>\r\n        <span className={props.started ? classes.Hidden : classes.ArrowUp}>{arrowUp}</span>\r\n        <span className={props.started ? classes.Hidden : classes.RepeatText}>\r\n          {props.mode === 'Interval' || props.mode === 'Chord' ? 'Repeat the notes' : 'Repeat the note'}\r\n        </span>\r\n      </button>\r\n      <button onClick={props.clicked}>{props.volumeOn ? volumeOnIcon : volumeOffIcon}</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopBtns;\r\n","import React from 'react';\r\nimport classes from './SessionStats.module.css';\r\nimport { checkMark, xIcon } from '../UI/UIIcons';\r\n\r\nconst SessionStats = props => (\r\n  <div className={classes.SessionStats}>\r\n    <div>\r\n      <span className={classes.CheckMark}>{checkMark}</span>\r\n      <span className={props.animCorrect ? [classes.NumAnim, classes.SessionNum].join(' ') : classes.SessionNum}>\r\n        {props.correct}\r\n      </span>\r\n    </div>\r\n    <div>\r\n      <span className={classes.XIcon}>{xIcon}</span>\r\n      <span className={props.animWrong ? [classes.NumAnim, classes.SessionNum].join(' ') : classes.SessionNum}>\r\n        {props.wrong}\r\n      </span>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default SessionStats;\r\n","import React from 'react';\r\nimport classes from './StartPanel.module.css';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport '../UI/compAnims.css';\r\n\r\nconst StartPanel = props => (\r\n  <CSSTransition in={!props.startGame} timeout={450} classNames=\"PanelOpacity\" mountOnEnter unmountOnExit>\r\n    <div className={classes.ShowStart}>\r\n      <div className={classes.StartPanel}>\r\n        <span className={classes.ExampleTitle}>\r\n          {props.mode === 'Interval' ? 'Select the interval between the two notes' :\r\n          props.mode === 'Chord' ? 'Select the chord matching the notes' : 'Name the note'}\r\n        </span>\r\n        <button className={classes.StartBtn} onClick={props.started}>Play</button>\r\n        {props.mode === 'Interval' || props.mode === 'Chord' ? (\r\n          <div className={classes.RootExample}>\r\n            <button>R</button>\r\n            <span>Root Note</span>\r\n          </div>\r\n        ) : null }\r\n        <div className={classes.TargetExample}>\r\n          <button></button>\r\n          <span>{props.mode === 'Chord' ? 'Chord Note' : 'Target Note'}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </CSSTransition>\r\n);\r\n\r\nexport default StartPanel;\r\n"],"sourceRoot":""}